import java.io.*;
import java.util.*;
public class BookAnalyzer {
	private Set<String> posWords;
	private Set<String> negWords;
	private ArrayList<Object> bookWords;
	
	public BookAnalyzer(String positive, String negative,
			File book) throws FileNotFoundException {
		this.posWords = wordsSet(positive);
		this.negWords = wordsSet(negative);
		this.bookWords = process(book);
	}

	private ArrayList<Object> process(File book) throws FileNotFoundException {
		List<String> posList = new ArrayList<String>();
		List<String> negList = new ArrayList<String>();
		List<String> words = new ArrayList<String>();
		ArrayList<Object> processed = new ArrayList<Object>();
		Map<Integer, String> posMap = new HashMap<Integer, String>();
		Map<Integer, String> negMap = new HashMap<Integer, String>();
		Scanner fileScanner = new Scanner(book);
		while(fileScanner.hasNext()){
			String x = fileScanner.next();
			if(posWords.contains(x)){
				posList.add(x);
				words.add(x);
			}
			else if(negWords.contains(x)){
				negList.add(x);
				words.add(x);
			}
			else{
				words.add(x);
			}
		}
		fileScanner.close();
		posMap = sentimentCount(posList, words);
		negMap = sentimentCount(negList, words);
		
		int x = 0;
		for(int value:posMap.keySet()){
			if(value>x){
				x = value;
			}
		}
		int y = 0;
		for(int value:negMap.keySet()){
			if(value>y){
				y = value;
			}
		}
		
		processed.add(posList);
		processed.add(negList);
		processed.add(words);
//		System.out.printf("The number of negative words: %d\n",negList.size());
//		System.out.printf("The number of positive words: %d\n",posList.size());
//		System.out.printf("The number of words total: %d\n",words.size());
//		System.out.printf("The percentage of positive words: %.2f percent\n", (((double)posList.size()/words.size())*100));
//		System.out.printf("The percentage of negative words: %.2f percent\n", (((double)negList.size()/words.size())*100));
//		System.out.printf("The most common positive word: %s\n",posMap.get(x));
//		System.out.printf("The most common negative word: %s\n",negMap.get(y));
		return processed;
	}

	private Map<Integer, String> sentimentCount(List<String> sentiments, List<String> words) {
		int count = 0;
		Map<Integer, String> sMap = new HashMap<Integer, String>();
		for(String sentiment:sentiments){
			for(String word:words){
				if(sentiment==word){
					count++;
				}
			}
			sMap.put(count, sentiment);
		}
		return sMap;
	}

	private ArrayList<String> wordsList(ArrayList<File> books) {
		ArrayList<String> words = new ArrayList<String>();
		for(File book:books){
			try{
			Scanner fileScanner = new Scanner(book);
			while(fileScanner.hasNext()){
				words.add(fileScanner.next());
			}
			fileScanner.close();
		}catch(FileNotFoundException e){
			System.out.print("File not found please try again.");
			}
		}
		
		return words;
		
		
	}

	private Set<String> wordsSet(String positive) throws FileNotFoundException {
		Set<String> set = new HashSet<String>();
		Scanner fileScanner = new Scanner(new File(positive));
		while(fileScanner.hasNext()){
			set.add(fileScanner.next());
		}
		fileScanner.close();
		
		return set;
		
	}
}
